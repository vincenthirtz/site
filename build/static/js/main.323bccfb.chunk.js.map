{"version":3,"sources":["components/Layout/Header.js","components/Layout/Sidebar.js","components/Layout/Footer.js","components/Layout/Layout.js","components/NotFound/NotFound.js","components/Home/Home.js","components/Blog/Blog.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","Header","props","handleMenu","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","HeaderStyled","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","styled","div","Sidebar","small","SidebarStyled","to","Footer","FooterStyled","Layout","component","setHandleMenu","LayoutStyled","CoreStyled","e","stopPropagation","ComponentStyled","NofFound","Fragment","Home","Blog","App","exact","path","NotFound","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.323bccfb.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nconst Header = props => {\n\n    const { handleMenu } = props;\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = event => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <HeaderStyled>\n            <div className={classes.grow}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleMenu}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                            Material-UI\n          </Typography>\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n                        </div>\n                        <div className={classes.grow} />\n                        <div className={classes.sectionDesktop}>\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                                <Badge badgeContent={4} color=\"secondary\">\n                                    <MailIcon />\n                                </Badge>\n                            </IconButton>\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                                <Badge badgeContent={17} color=\"secondary\">\n                                    <NotificationsIcon />\n                                </Badge>\n                            </IconButton>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleProfileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                        </div>\n                        <div className={classes.sectionMobile}>\n                            <IconButton\n                                aria-label=\"show more\"\n                                aria-controls={mobileMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleMobileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <MoreIcon />\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                {renderMobileMenu}\n                {renderMenu}\n            </div>\n        </HeaderStyled>\n    );\n}\n\nexport default Header;\n\nconst HeaderStyled = styled.div`\n    flex: 1;\n`;\n\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {\n    Link,\n} from \"react-router-dom\";\n\nconst Sidebar = props => {\n    const { small } = props;\n\n\n    return (\n        <SidebarStyled small={small}>\n            <ul>\n            <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/blog\">Blog</Link></li>\n            </ul>\n\n        </SidebarStyled>\n    );\n}\n\nexport default Sidebar;\n\nconst SidebarStyled = styled.div`\nfont-size: inherit;\nvisibility: visible;\nwidth: ${props => (props.small ? \"0px\" : \"285px\")};\nheight: 100%;\nposition: relative;\ntop: auto;\nleft: auto;\ntransition: all linear 350ms;\nbox-shadow: 0 0 4px rgba(0,0,0,0.666);\na {\n    color: black;\n}\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n    return (\n        <FooterStyled>\n            <p>Footer</p>\n        </FooterStyled>\n    );\n}\n\nexport default Footer;\n\nconst FooterStyled = styled.div`\n  flex: 1;\n`;","import React , { useState } from 'react';\nimport styled from \"styled-components\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Footer from \"./Footer\";\n\nconst Layout = props => {\n  const { component } = props;\n  const [handleMenu, setHandleMenu] = React.useState(false);\n\n  const toggleMenu = e => {\n    e.stopPropagation();\n    setHandleMenu(!handleMenu);\n};\n\n  return (\n    <LayoutStyled>\n      <Sidebar small={handleMenu} />\n      <CoreStyled>\n        <Header handleMenu={toggleMenu} />\n        <ComponentStyled>\n          {component()}\n        </ComponentStyled>\n        <Footer />\n      </CoreStyled>\n    </LayoutStyled>\n  );\n}\n\nexport default Layout;\n\nconst LayoutStyled = styled.div`\n    display: flex;\n    height: 100%;\n`;\n\nconst ComponentStyled = styled.div`\nflex: 1;\n`;\n\nconst CoreStyled = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n`;\n\n","import React from 'react';\n\nconst NofFound = () => {\n  return (\n    <React.Fragment>\n      <p>NofFound</p>\n    </React.Fragment>\n  );\n}\n\nexport default NofFound;\n","import React from 'react';\n\nconst Home = () => {\n    return (\n        <React.Fragment>\n            <p>HOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOMEHOME</p>\n        </React.Fragment>\n    );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Blog = () => {\n    return (\n        <React.Fragment>\n            <p>Blog</p>\n        </React.Fragment>\n    );\n}\n\nexport default Blog;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport Layout from \"components/Layout/Layout\";\nimport NotFound from \"components/NotFound/NotFound\";\nimport Home from \"components/Home/Home\";\nimport Blog from \"components/Blog/Blog\";\n\n\nconst App = () => (<Router>\n  <Switch>\n    <Layout exact path=\"/\" component={Home} />\n    <Layout exact path=\"/blog\" component={Blog} />\n    <Layout path=\"*\" component={NotFound} />\n  </Switch>\n</Router>);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}